---
title: "Birthweight data: interactive"
format: 
  html:
    code-fold: "show"
    code-summary: "[hide/show R code]"
server: shiny
---

```{r}
#| label: "data prep"
#| context: setup
#| message: false
#| echo: true
#| code-fold: true

data("birthweight", package = "dobson")
library(shiny)
library(ggplot2)
library(dplyr)
library(conflicted)
library(tidyr)
library(parameters)
library(pander)

bw = 
  birthweight |> 
  pivot_longer(
    cols = everything(),
    names_to = c("sex", ".value"),
    names_sep = "s "
  ) |> 
  mutate(
    sex = ifelse(sex == "boy", "male", "female"),
    male = (sex == "male") |> as.integer())  |> 
  rename(age = `gestational age`) |> 
  mutate(
    `age - mean` = age - mean(age),
    `age - 35wks` = age - 35
  )

plot1 = 
  bw |> 
  ggplot(
    aes(
      x = age, 
      y = weight,
      linetype = sex,
      shape = sex,
      col = sex))  +
  theme_bw() +
  xlab("Gestational age (weeks)") +
  ylab("Birthweight (grams)") +
  # expand_limits(y = 0, x = 0) +
  geom_point(alpha = .7)


bw_lm2 = lm(weight ~ sex + sex:`age - 35wks` - 1, data = bw)
```

```{r}
bw_lm2 |> summary() |> pander()
```

```{r}
#| context: setup
CI = confint(bw_lm2)
```

```{r}

slider_width = "100%"

male_int_slider = 
  sliderInput(
    width = slider_width,
    "male_int", 
    "Male intercept",
    min = CI["sexmale", "2.5 %"] |> round(),
    max = CI["sexmale", "97.5 %"] |> round(),
    value = coef(bw_lm2)["sexmale"] |> round())

male_slope_slider = 
  sliderInput(
    width = slider_width,
    "male_slope", 
    "Male slope",
    min = CI["sexmale:`age - 35wks`", "2.5 %"] |> round(),
    max = CI["sexmale:`age - 35wks`", "97.5 %"] |> round(),
    value = coef(bw_lm2)["sexmale:`age - 35wks`"] |> round())

female_int_slider = 
  sliderInput(
    width = slider_width,
    "female_int", 
    "Female intercept",
    min = CI["sexfemale", "2.5 %"] |> round(),
    max = CI["sexfemale", "97.5 %"] |> round(),
    value = coef(bw_lm2)["sexfemale"] |> round())

female_slope_slider = 
  sliderInput(
    width = slider_width,
    "female_slope", 
    "Female slope",
    min = CI["sexfemale:`age - 35wks`", "2.5 %"] |> round(),
    max = CI["sexfemale:`age - 35wks`", "97.5 %"] |> round(),
    value = coef(bw_lm2)["sexfemale:`age - 35wks`"] |> round())

sidebar = 
  sidebarPanel(
    width = 3,
    male_int_slider,
    male_slope_slider,
    female_int_slider,
    female_slope_slider
  )


```

```{r}
#| label: "UI figure"
main_panel = mainPanel(
  width = 9,
  h3("Log-likelihood: "),
  verbatimTextOutput("loglik"),
  
  plotOutput("plot1")
  # tableOutput("bw"),
  )
```

```{r}
#| label: "UI overall"
fluidPage(
  sidebarLayout(
    sidebarPanel = sidebar, 
    mainPanel = main_panel))
```


```{r}
#| context: server

bw2 = 
  bw |> 
  mutate(
    `E[Y|X]` = 
      if_else(
        sex == "male",
        input$male_int + input$male_slope * `age - 35wks`,
        input$female_int + input$female_slope * `age - 35wks`
      ),
    resid = weight - `E[Y|X]`,
    `p(Y|X)` = dnorm(
      x = resid, 
      mean = 0, 
      sd = mean(resid^2)/(n() - 4))
  ) |> 
  reactive()
# output$bw = bw2() |> head() |> renderTable()
output$loglik = bw2()$`p(Y|X)` |> log() |> sum() |> reactive()

plot1_with_model = 
  reactive(
    {
      plot1 + 
        geom_abline(
          mapping = aes(
            intercept = input$male_int - input$male_slope * 35,
            slope = input$male_slope,
            col = "male"
          )
        ) + 
        geom_abline(
          mapping = aes(
            intercept = input$female_int - input$female_slope * 35  ,
            slope = input$female_slope,
            col = "female"
          )
        )
    })

output$plot1 = 
  plot1_with_model() |> 
  renderPlot()
```

